{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\p\\\\3D Objects\\\\sorting_algo\\\\sort_sort_sort\\\\src\\\\visualiser\\\\visualiser.jsx\";\nimport React from 'react';\nimport './visualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Svisualiser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < 100; i++) {\n      array.push(randomizer(10, 850));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        children: value\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction randomizer(minn, maxx) {\n  return Math.floor(Math.random() * (maxx - minn + 1) + minn);\n}","map":{"version":3,"sources":["C:/Users/p/3D Objects/sorting_algo/sort_sort_sort/src/visualiser/visualiser.jsx"],"names":["React","Svisualiser","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomizer","setState","render","map","value","idx","minn","maxx","Math","floor","random"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;;AAEA,eAAe,MAAMC,WAAN,SAA0BD,KAAK,CAACE,SAAhC,CAA0C;AACrDC,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACTC,MAAAA,KAAK,EAAE;AADE,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAE;AACf,SAAKC,UAAL;AACH;;AAEDA,EAAAA,UAAU,GAAG;AACT,UAAMF,KAAK,GAAG,EAAd;;AACA,SAAK,IAAIG,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAC,GAAlB,EAAuBA,CAAC,EAAxB,EAA2B;AACvBH,MAAAA,KAAK,CAACI,IAAN,CAAWC,UAAU,CAAC,EAAD,EAAI,GAAJ,CAArB;AACH;;AACD,SAAKC,QAAL,CAAc;AAACN,MAAAA;AAAD,KAAd;AACH;;AAGDO,EAAAA,MAAM,GAAE;AACJ,UAAM;AAACP,MAAAA;AAAD,QAAU,KAAKD,KAArB;AAEA,wBACI;AAAA,gBACCC,KAAK,CAACQ,GAAN,CAAW,CAACC,KAAD,EAAQC,GAAR,kBACR;AACE,QAAA,SAAS,EAAC,WADZ;AAAA,kBAGED;AAHF,SAEOC,GAFP;AAAA;AAAA;AAAA;AAAA,cADH;AADD;AAAA;AAAA;AAAA;AAAA,YADJ;AAWK;;AAnC4C;;AAwCzD,SAASL,UAAT,CAAoBM,IAApB,EAA0BC,IAA1B,EAAgC;AAChC,SAAOC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBH,IAAI,GAAGD,IAAP,GAAY,CAA7B,IAAkCA,IAA7C,CAAP;AACC","sourcesContent":["\r\nimport React from 'react';\r\nimport './visualiser.css';\r\n\r\nexport default class Svisualiser extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i<100; i++){\r\n            array.push(randomizer(10,850));\r\n        } \r\n        this.setState({array});\r\n    }\r\n\r\n    \r\n    render(){\r\n        const {array} = this.state;\r\n\r\n        return (\r\n            <div> \r\n            {array.map ((value, idx) => (\r\n                <div\r\n                  className=\"array-bar\"\r\n                  key={idx}>\r\n                 {value} \r\n                </div> \r\n            ))  }\r\n            </div>\r\n        )\r\n            }\r\n\r\n\r\n}\r\n\r\nfunction randomizer(minn, maxx) {\r\nreturn Math.floor(Math.random() * (maxx - minn+1) + minn);\r\n}\r\n        "]},"metadata":{},"sourceType":"module"}