{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\p\\\\3D Objects\\\\sorting_algo\\\\sort_sort_sort\\\\src\\\\visualiser\\\\visualiser.jsx\";\nimport React from 'react';\nimport './visualiser.css';\nimport { getMergeSortAnimations } from '../algorithms/merge_Sort';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ANIM_SPEED = 10;\nconst NUM_BARS = 400;\nconst PRIM_COL = 'blue';\nconst SEC_COL = 'red';\nexport default class Svisualiser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < NUM_BARS; i++) {\n      array.push(randomizer(10, 750));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  mergeSort() {\n    const anim = getMergeSortAnimations(this.state.array);\n\n    for (let i = 0; i < anim.length; i++) {\n      const arraybars = document.getElementsByClassName('array-bar');\n      const iscolorchange = i % 3 !== 2;\n\n      if (iscolorchange) {\n        const [barOI, barTI] = anim[i];\n        const barOIstyle = arraybars[barOI].style;\n        const barTIstyle = arraybars[barTI].style;\n        const color = i % 3 === 0 ? SEC_COL : PRIM_COL;\n        setTimeout(() => {\n          barOIstyle.backgroundColor = color;\n          barTIstyle.backgroundColor = color;\n        }, i * ANIM_SPEED);\n      } else {\n        setTimeout(() => {\n          const [barO, newH] = anim[i];\n          const barOstyle = arraybars[barO].style;\n          barOstyle.height = `${newH}px`;\n        }, i * ANIM_SPEED);\n      }\n    }\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-bar\",\n        style: {\n          height: `${value}px`\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.resetArray(),\n        children: \"Generate new Array.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.mergeSort(),\n        children: \"MergeSort.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nfunction randomizer(minn, maxx) {\n  return Math.floor(Math.random() * (maxx - minn + 1) + minn);\n}","map":{"version":3,"sources":["C:/Users/p/3D Objects/sorting_algo/sort_sort_sort/src/visualiser/visualiser.jsx"],"names":["React","getMergeSortAnimations","ANIM_SPEED","NUM_BARS","PRIM_COL","SEC_COL","Svisualiser","Component","constructor","props","state","array","componentDidMount","resetArray","i","push","randomizer","setState","mergeSort","anim","length","arraybars","document","getElementsByClassName","iscolorchange","barOI","barTI","barOIstyle","style","barTIstyle","color","setTimeout","backgroundColor","barO","newH","barOstyle","height","render","map","value","idx","minn","maxx","Math","floor","random"],"mappings":"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","sourcesContent":["\r\nimport React from 'react';\r\nimport './visualiser.css';\r\nimport { getMergeSortAnimations } from '../algorithms/merge_Sort';\r\n\r\n\r\nconst ANIM_SPEED = 10;\r\n\r\nconst NUM_BARS = 400;\r\n\r\nconst PRIM_COL = 'blue';\r\n\r\nconst SEC_COL = 'red';\r\n\r\nexport default class Svisualiser extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            array: [],\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.resetArray();\r\n    }\r\n\r\n    resetArray() {\r\n        const array = [];\r\n        for (let i = 0; i<NUM_BARS; i++){\r\n            array.push(randomizer(10,750));\r\n        } \r\n        this.setState({array});\r\n    }\r\n\r\n    mergeSort (){\r\n        const anim = getMergeSortAnimations (this.state.array);\r\n        for (let i = 0; i < anim.length; i++){\r\n            const arraybars = document.getElementsByClassName('array-bar');\r\n            const iscolorchange = i % 3 !== 2;\r\n            if (iscolorchange){\r\n                const [barOI, barTI] = anim[i];\r\n                const barOIstyle = arraybars[barOI].style;\r\n                const barTIstyle = arraybars[barTI].style;\r\n                const color = i % 3 === 0? SEC_COL: PRIM_COL;\r\n\r\n                setTimeout(() =>{\r\n                    barOIstyle.backgroundColor = color;\r\n                    barTIstyle.backgroundColor = color;\r\n\r\n                }, i * ANIM_SPEED);\r\n\r\n            }else{\r\n                setTimeout(() =>{\r\n                    const [barO, newH] = anim[i];\r\n                    const barOstyle = arraybars[barO].style;\r\n                    barOstyle.height =  `${newH}px` ;\r\n                }, i * ANIM_SPEED)\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    render(){\r\n        const {array} = this.state;\r\n    \r\n\r\n        return (\r\n            <div>{array.map ((value, idx) => (\r\n                <div className=\"array-bar\" \r\n                key={idx}\r\n                style = {{ height: `${value}px` }}></div> \r\n            )) } \r\n            <p></p>\r\n            <button onClick = {()=> this.resetArray()}>Generate new Array.</button>\r\n            <button onClick = {()=> this.mergeSort()}>MergeSort.</button>\r\n           \r\n             </div> \r\n\r\n       \r\n\r\n        )}\r\n\r\n\r\n}\r\n\r\nfunction randomizer(minn, maxx) {\r\nreturn Math.floor(Math.random() * (maxx - minn+1) + minn);\r\n}\r\n        "]},"metadata":{},"sourceType":"module"}